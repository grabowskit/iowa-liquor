input {
   file {
      start_position => "beginning"
      path => "/Volumes/storage/demo-data/iowa/iowa-liquor.csv"
      codec => multiline {
          pattern => "^(S|INV-)[0-9][0-9]"
          negate => "true"
          what => "previous"
      }
    }
}

filter {
      csv {
          columns => ["InvoiceItemNumber","Date","StoreNumber","StoreName","Address","City","ZipCode","StoreLocation","CountyNumber","County","Category","CategoryName","VendorNumber","VendorName","ItemNumber","ItemDescription","Pack","BottleVolumeml","StateBottleCost","StateBottleRetail","BottlesSold","SaleDollars","VolumeSoldLiters","VolumeSoldGallons"]
          convert => { "StoreNumber" => "integer" "ItemNumber" => "integer" "Category" => "integer" "CountyNumber" => "integer" "VendorNumber" => "integer" "Pack" => "integer" "SaleDollars" => "float" "StateBottleCost" => "float" "StateBottleRetail" => "float" "BottleVolumeml" => "float" "BottlesSold" => "float" "VolumeSoldLiters" => "float" "VolumeSoldGallons" => "float"}
          remove_field => ["message"]
       }

       #take the linebreaks out of the location and convert to spaces
       #lowercase the city and county as they change in the source file
       mutate {
               gsub => [ "StoreLocation", "\n", " " ]
               lowercase => [ "County", "City" ]
               }

       #get the lat/lon if there is a (numbers,numbers) data in the location
       grok { match => { "StoreLocation" => "\((?<location>[-,.0-9 ]*)\)" } }

       #Match the date to just daily and the correct timezone
       date {
               "target" => "DateofSale"
               "match" => [ "Date", "MM/dd/YYYY" ]
               "timezone" => "America/Chicago"
       }
}

output {
      elasticsearch {
          hosts => ["localhost:9200"]
          user => "elastic"
          password => "password"
          index => ["iowa-liquor"]
          document_type => "_doc"
          manage_template => false
      }
      #output dots while we process
      stdout {codec => "dots"}
      #if we see a date parse failure, dump it to screen to review
      if "_dateparsefailure" in [tags] {
         stdout{codec => "rubydebug"}
      }
}
